/*
 * Licensed under the X license (see http://www.x.org/terms.htm)
 */
package org.opentools.minerva.jdbc;

import java.sql.*;
import org.opentools.minerva.cache.CachedObjectFactory;

/**
 * Creates PreparedStatements for a PS cache.  Doesn't yet handle
 * different isolation levels, etc.
 *
 * @author Aaron Mulder ammulder@alumni.princeton.edu
 */
public class PreparedStatementFactory extends CachedObjectFactory {
    private Connection con;

    public PreparedStatementFactory(Connection con) {
        this.con = con;
    }

    /**
     * Creates a PreparedStatement from a Connection & SQL String.
     */
    public Object createObject(Object sqlString) {
        PreparedStatementArgs args = (PreparedStatementArgs)sqlString;
        try {
          if(args.autoGeneratedKeys != null)
            return con.prepareStatement(args.sql, args.autoGeneratedKeys.intValue());
          else
            return con.prepareStatement(args.sql);
        } catch(SQLException e) {
            throw new RuntimeException(e);
        }
    }

    /**
     * Closes a PreparedStatement.
     */
    public void deleteObject(Object pooledObject) {
        try {
            ((PreparedStatement)pooledObject).close();
        } catch(SQLException e) {}
    }
}
