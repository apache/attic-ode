/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

/*
 * Created on Dec 9, 2004
 *
 */
package org.opentools.minerva.jdbc;

/**
 * Wrapper for prepared statement args; needed for
 * comparison of different prepared statements with different
 * settings; required for statement caching.
 */
public class PreparedStatementArgs {
	String sql;
  Integer autoGeneratedKeys;
  /**
	 * 
	 */
	public PreparedStatementArgs(String sql) {
		this.sql = sql;
	}
  
  PreparedStatementArgs(String sql, int autoGeneratedKeys){
  	this(sql);
    this.autoGeneratedKeys = Integer.valueOf(autoGeneratedKeys);
  }
  
  public boolean equals(Object obj){
    PreparedStatementArgs a = (PreparedStatementArgs)obj;
    return (sql.equals(a.sql))
      && (autoGeneratedKeys == a.autoGeneratedKeys
          || (autoGeneratedKeys != null 
              && a.autoGeneratedKeys != null 
              && autoGeneratedKeys.equals(a.autoGeneratedKeys)));
  }
  
  public int hashCode(){
  	return sql.hashCode() 
      + (autoGeneratedKeys == null ? 0 : autoGeneratedKeys.hashCode());
  }
}
